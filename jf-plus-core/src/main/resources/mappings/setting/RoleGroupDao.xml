<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jf.plus.core.setting.dao.RoleGroupDao">

	<sql id="RoleGroupColumns">
		a.id as "id",
		a.group_name as "groupName",
		a.group_role_ids as "groupRoleIds",
		a.org_id as "orgId",
		a.available as "available",
		a.create_by as "createBy",
		a.create_date as "createDate",
		a.update_by as "updateBy",
		a.update_date as "updateDate",
		a.remarks as "remarks",
		a.status as "status"
	</sql>

	<sql id="orgColumns">
		org.name as "orgName"
	</sql>

	<sql id="roleColumns">
		(select GROUP_CONCAT(name) from sys_role where
		FIND_IN_SET(id,a.group_role_ids)) as "groupRoleNames"
	</sql>

	<select id="get" resultType="com.jf.plus.core.setting.entity.RoleGroup">
		SELECT
		<include refid="RoleGroupColumns" />
		FROM sys_role_group a
		WHERE a.id = #{id}
	</select>
	
	<select id="getEntity" resultType="com.jf.plus.core.setting.entity.RoleGroup">
		SELECT
		<include refid="RoleGroupColumns" />
		FROM sys_role_group a
		<where>
			<if test="id != null">
				and a.id = #{id}
			</if>
			<if test="groupName != null and groupName != ''">
				and a.group_name = #{groupName}
			</if>
			<if test="orgId != null">
				and a.org_id = #{orgId}
			</if>
		</where>
		LIMIT 1
	</select>

	<select id="findList" resultType="com.jf.plus.core.setting.entity.RoleGroup">
		SELECT
		<include refid="RoleGroupColumns" />
		FROM sys_role_group a
	</select>
	
	<select id="findMyRoleGroupList" resultType="com.jf.plus.core.setting.entity.RoleGroup">
		SELECT
		<include refid="RoleGroupColumns" />
		FROM sys_role_group a
		<where>
			a.status = '1' and a.available = '1'
			<if test="orgId != null">
				and a.org_id = #{orgId}
			</if>
		</where>
	</select>

	<select id="count" resultType="int">
		SELECT count(1) FROM (
		SELECT a.id FROM sys_role_group a
		LEFT JOIN sys_organization org on org.id = a.org_id
		<where>
			<if test="page.entity != null">
				<if test="page.entity.groupName != null and page.entity.groupName != ''">
					and a.group_name like concat('%',#{page.entity.groupName},'%')
				</if>
			</if>
			<if
				test="page.entity.dataScopeFilter.dataScopeSql != null and page.entity.dataScopeFilter.dataScopeSql != ''">
				${page.entity.dataScopeFilter.dataScopeSql}
			</if>

		</where>
		<if test="page.orderBy!=''">
			ORDER BY ${page.orderBy} LIMIT
			${page.pageNo*page.pageSize},${page.pageSize}
		</if>
		) t
	</select>

	<select id="findPage" resultType="com.jf.plus.core.setting.entity.RoleGroup">
		SELECT
		<include refid="RoleGroupColumns" />
		,
		<include refid="orgColumns" />
		,
		<include refid="roleColumns" />
		FROM sys_role_group a
		LEFT JOIN sys_organization org on org.id = a.org_id
		<where>
			<if test="page.entity != null">
				<if test="page.entity.groupName != null and page.entity.groupName != ''">
					and a.group_name like concat('%',#{page.entity.groupName},'%')
				</if>
			</if>
			<if
				test="page.entity.dataScopeFilter.dataScopeSql != null and page.entity.dataScopeFilter.dataScopeSql != ''">
				${page.entity.dataScopeFilter.dataScopeSql}
			</if>

		</where>
		<if test="page.orderBy!=''">
			ORDER BY ${page.orderBy} LIMIT
			${page.pageNo*page.pageSize},${page.pageSize}
		</if>
	</select>

	<insert id="insert">
		<selectKey keyProperty="id" resultType="java.lang.String">  
            select LAST_INSERT_ID()  
        </selectKey>
		insert into sys_role_group(
		group_name,
		group_role_ids,
		org_id,
		available,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		status
		)
		values(
		#{groupName},
		#{groupRoleIds},
		#{orgId},
		#{available},
		#{createBy},
		#{createDate},
		#{updateBy},
		#{updateDate},
		#{remarks},
		#{status}
		)
	</insert>

	<update id="update">
		update sys_role_group
		<set>
			<if test="groupName != null">
				group_name=#{groupName},
			</if>
			<if test="groupRoleIds != null">
				group_role_ids=#{groupRoleIds},
			</if>
			<if test="orgId != null">
				org_id=#{orgId},
			</if>
			<if test="available != null">
				available=#{available},
			</if>
			<if test="createBy != null">
				create_by=#{createBy},
			</if>
			<if test="createDate != null">
				create_date=#{createDate},
			</if>
			<if test="updateBy != null">
				update_by=#{updateBy},
			</if>
			<if test="updateDate != null">
				update_date=#{updateDate},
			</if>
			<if test="remarks != null">
				remarks=#{remarks},
			</if>
			<if test="status != null">
				status=#{status},
			</if>
		</set>
		where id=#{id}
	</update>

	<delete id="delete">
		delete from sys_role_group where id=#{id}
	</delete>
</mapper>
