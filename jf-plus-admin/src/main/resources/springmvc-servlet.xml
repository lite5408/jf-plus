<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- PropertyPlaceholderConfigurer,用于spring ${placeholder}的解析 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="properties" ref="applicationProperties" />
	</bean>

	<bean id="applicationProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>
					file:/home/resin/webser/cg-plus/config/jf-plus-admin.properties
				</value>
				<value>
					file:/home/resin/webser/cg-plus/config/jf-plus-common.properties
				</value>
			</list>
		</property>
	</bean>

    <!-- 开启controller注解支持 -->
    <context:component-scan base-package="cn.iutils.**.controller,com.jf.plus.**.**.controller" use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes" >
            <map>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
    </bean>

	<!-- 枚举类型定义：fastjson 输出值为null的字段，默认为false -->
	<bean id="FASTJSON_WRITE_MAP_NULL" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">    
        <property name="staticField" value="com.alibaba.fastjson.serializer.SerializerFeature.WriteMapNullValue" />    
    </bean>
 	<mvc:annotation-driven conversion-service="conversionService">
       <!-- 注入json自动转换，使用fastjson -->
		<mvc:message-converters register-defaults="true">
           <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
               <property name="features" ref="FASTJSON_WRITE_MAP_NULL"/>
               <property name="supportedMediaTypes"><!-- 解决乱码 -->
	           <list>  
	               <value>application/json;charset=UTF-8</value>  
	               <value>text/html;charset=UTF-8</value>  
	           </list>  
      			</property>
           </bean>
       </mvc:message-converters>
   	</mvc:annotation-driven>
   	
<!-- 	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" conversion-service="conversionService"> -->
<!-- 		<mvc:message-converters register-defaults="true"> -->
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
<!-- 			<bean class="org.springframework.http.converter.StringHttpMessageConverter"> -->
<!-- 		    	<constructor-arg value="UTF-8" /> -->
<!-- 			</bean> -->
			<!-- 将Jackson2HttpMessageConverter的默认格式化输出为false -->
<!-- 			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> -->
<!--                 <property name="supportedMediaTypes"> -->
<!--                 	<list><value>application/json;charset=UTF-8</value></list> -->
<!--                 </property> -->
<!--                 <property name="prettyPrint" value="false"/> -->
<!--                 <property name="objectMapper">   -->
<!--                     <bean class="cn.iutils.common.JsonMapper"></bean> -->
<!--                 </property>  -->
<!--             </bean> -->
<!-- 		</mvc:message-converters> -->
<!-- 	</mvc:annotation-driven> -->
	 

    <!-- 当在web.xml 中   DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>

	 <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
	    <property name="maxUploadSize" value="${file.maxUploadSize}" />
	</bean>

    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:order="1">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 拦截器配置，拦截顺序：先执行后定义的，排在第一位的最后执行。-->
    <mvc:interceptors>  
        <mvc:interceptor>  
            <mvc:mapping path="/${supplyPath}/*"/>
            <bean class="com.jf.plus.core.supplyer.controller.SupplyInteceptor">
            	<property name="loginUrl" value="${supplyPath}/login" />
            </bean>  
        </mvc:interceptor>  
    </mvc:interceptors>

	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.apache.shiro.authz.UnauthorizedException">error/403</prop>
				<prop key="java.lang.Throwable">error/500</prop>
			</props>
			</property>
	</bean>

    <!-- shiro权限验证 -->
    <aop:config proxy-target-class="true"></aop:config>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean"> 
      <property name="converters">
          <list>
              <bean class="com.jf.plus.common.utils.DateConverter"></bean>
          </list>
      </property>
    </bean>
</beans>
